# Translate Tails and the Tails website using Git

While it is possible to translate Tails custom programs using Transifex,
the documentation, that is this website, is only translatable using [[Git]].

## What can be translated

Various bits of text can be translated:

* **Custom programs** (Tails Greeter, Tails Persistence Setup, Tails
  Installer, Tails Upgrader, Tails Perl library and WhisperBack): each
  one has its own [[Git repository|contribute/git]], where PO files
  live in the `po` directory. Some have a `README.translators` at the
  root of their source tree: please read it.
* **A set of various translatable strings** live in the `po`
  directory, in the `devel`
  branch of the [[main Tails Git repository|contribute/Git]].
* **This website** must be translated in the `master` branch of the
  [[main Tails Git repository|contribute/Git]]. Please note [[there
  are requirements|translate#new-language]] to translate the website
  into a new language.

## Tools

Tails contains all the tools you need to set up a working
environment for translations. These tools are:

* Git
* Poedit
* OpenSSH client
* tools to [[build the wiki locally|contribute/build/website/]].

## gettext

The translation system used to translate Tails is called <span
class="application">[[!wikipedia gettext]]</span>. Every sentence that
needs to be translated is written in a [PO
file](https://www.gnu.org/software/gettext/manual/gettext.html#PO-Files).

To edit these PO files, we recommend that you use <span
class="application">[Poedit](http://www.poedit.net/screenshots.php)</span>, a
cross-platform editor for PO
files. <span class="application">Poedit</span> is included in Tails.

Please ensure that you use at least version 1.5 of Poedit, as this version
handles line breaks of our files correctly.

When setting up Poedit, you might want to ensure to use "Tails translators"
or "Tails developers" as translator name and "tails@boum.org" as translator
contact email address.

If you do not use Poedit, but for example Vim or Emacs with the po-plugin, please
verify for each translation that the syntax of the files is not broken. In order to do
do so, please refer to the [[localization tricks page|contribute/l10n_tricks]].

If there is no existing PO file for your language, you can copy the
corresponding `.pot` file into a new `.po` file.

When working on the website translation, it is highly recommended that you
[[build the wiki locally|contribute/build/website/]] in order to verify
your modifications or to review the translations of somebody else.

## Workflow

You can take advantage of Git to send us your work by asking us to
pull from your Git branch. Here is the typical workflow used by Tails
translators teams:

1. Set up your personal [[Git repository|contribute/git]]: if you
   already know where to host it in a public place, this is great;
   else, [fork us on repo.or.cz](http://repo.or.cz/w/tails.git) or ask
   the Tails system administrators (<tails-sysadmins@boum.org>) to host
   your repository.

   On your computer, set up the repository. This example clones
   an empty repository into the "tails" folder:

   `git clone http://repo.or.cz/r/tails/yourrepo.git tails`

2. Then setup the remote Tails main repository:

   `cd tails`

   `git remote add tails https://git-tails.immerda.ch/tails`

   Typing `git remote` should now show two entries:

   `origin
   tails`

   "origin" is your own repository, "tails" contains the files of the
   main repository once we fetch them. This operation requires some time
   at setup, as it requires to pull the whole repository.

   `git fetch tails master`

3. Now to setup Git, type:

   `git config user.name "Tails developers"
   git config user.email "tails@boum.org"`

   Verify this configuration by typing:

   `git config --list`

4. Create a branch for every translation you make, for example, if you want to
   translate the "contribute" page, create a branch named "translation-contribute":

   `git branch translation-contribute`

   `git checkout translation-contribute`

   Now typing `git branch` should show a star in front of the active branch.

5. Translate whatever you can in your preferred PO file editor.

6. Commit the changes you made to `.po` files:

   `git add <files>`

   `git commit <files>`

7. Merge our main repository into yours.
   Regularly, pull from the master branch of the main repository to update
   your local files.

   `git fetch tails master` only fetches new files,

   `git pull tails master` fetches and merges the files.

8. Push your changes to your online Git repository.

   `git push origin <name of branch>`

   `git push origin translation-contribute`

9. Ask other members of your translation team to review your work by writing
   an email to [[the mailing list for
   translators|translate#follow-up]], containing in its subject
   "(Review)" and the short code for the translated language, for example "[fr]".

10. The reviewer, once happy with the result, should ask on the
   [[mailing list for translators|translate#follow-up]] to pull from
   the branch that was worked on, writing an email with "(pull)" and the language
   short code in the subject. Ideally, such email would be OpenPGP-signed.

You might want to consider using Git over Tor, for example, by using a Tails device when you translate.

Read more about the Tails [[Git|contribute/git]] setup.

# Resources

- The [[localization tricks page|contribute/l10n_tricks]]
