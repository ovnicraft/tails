[[!meta title="Translate Tails and the Tails website using Git"]]

While it is possible to translate Tails custom programs using Transifex,
the documentation, that is this website, is only translatable using [[Git]].

[[!toc levels=2]]

## Setup your tools

We recommend to use Tails to do your translations as it contains all the tools
you need to set up a working environment. These tools are:

* Git - manage source code
* Poedit - translate files
* OpenSSH client - publish your translations on the server
* tools to [[build the wiki locally|contribute/build/website/]] - check your work

You could also install and setup these tools on another operating system. In this case, please
ensure that you use at least version 1.5 of Poedit, as this version handles line breaks of our
files correctly.

## Where are the translatable files?

Once you have [[downloaded the source code using Git|translate/translate_with_git#workflow]],
you can find the website source files in `wiki/src`.

The original website files are written in english, either in HTML or in markdown. They have either a
.html or a .mdwn extension.

These original files are not to be modified by translators. Instead, look for a file with the
same name, but with the extension `.po`. Before this extension you will find the language code,
for example `fr` for french.

To edit these PO files, we recommend that you use <span
class="application">[Poedit](http://www.poedit.net/screenshots.php)</span>, a
cross-platform editor for PO files.

When setting up Poedit, you might want to ensure to use "Tails translators"
or "Tails developers" as translator name and "tails@boum.org" as translator
contact email address.

If you do not use Poedit, but for example Vim or Emacs with the po-plugin, please
verify for each translation that the syntax of the files is not broken. In order to do
do so, please refer to the [[localization tricks page|contribute/l10n_tricks]].

If there is no existing PO file for your language, you can copy the
corresponding `.pot` file into a new `.po` file.

- Important parts of our website:

	- [[/index]]
	- [[/about]] page
	- [[/getting_started]] page
	- [[/support]] page
	- [[/download]] page
	- [[/doc/about]] section
	- [[/doc/first_steps]] section

See the exhaustive list of [[core pages|l10n_tricks/core_po_files.txt]].

<a id="workflow"></a>

## Workflow

Git makes it possible to work together on the same files and to track each modification.

If you don't know Git, you might want to [[learn it first|contribute/git#index1h1]].

Here is the typical workflow used by Tails translators teams:

### Set up your own copy of the source code

1. Set up your personal Git repository: if you
   already know where to host it in a public place, this is great;
   else, [fork us on repo.or.cz](http://repo.or.cz/w/tails.git) or ask
   the Tails system administrators (<tails-sysadmins@boum.org>) to host
   your repository.

   On your computer, set up the repository. This example clones
   an empty repository into the "tails" folder:

   `git clone http://repo.or.cz/r/tails/yourrepo.git tails`

2. Then setup the remote Tails main repository:

   `cd tails`

   `git remote add tails https://git-tails.immerda.ch/tails`

   Typing `git remote` should now show two entries:

   `origin
   tails`

   "origin" is your own repository, "tails" contains the files of the
   main repository once we fetch them. This operation requires some time
   at setup, as it requires to pull the whole repository.

   `git fetch tails master`

### Configure your credentials

3. Now to setup Git, type:

   `git config user.name "Tails developers"
   git config user.email "tails@boum.org"`

   Verify this configuration by typing:

   `git config --list`

4. Create a branch for every translation you make, for example, if you want to
   translate the "contribute" page, create a branch named "translation-contribute":

   `git branch translation-contribute`

   `git checkout translation-contribute`

   Now typing `git branch` should show a star in front of the active branch.

5. Translate whatever you can in your preferred PO file editor, possibly Poedit.

6. Commit the changes you made to `.po` files:

   `git add <files>`

   `git commit <files>`

7. Build the wiki to test your modifications.

8. Merge our main repository into yours.
   Regularly, pull from the master branch of the main repository to update
   your local files.

   `git fetch tails master` only fetches new files,

   `git pull tails master` fetches and merges the files.

9. Push your changes to your online Git repository.

   `git push origin <name of branch>`

   `git push origin translation-contribute`

10. Ask other members of your translation team to review your work by writing
   an email to [[the mailing list for
   translators|translate#follow-up]], containing in its subject
   "(Review)" and the short code for the translated language, for example "[fr]".

11. The reviewer, once happy with the result, should ask on the
   [[mailing list for translators|translate#follow-up]] to pull from
   the branch that was worked on, writing an email with "(pull)" and the language
   short code in the subject. Ideally, such email would be OpenPGP-signed.

You might want to consider using Git over Tor, for example, by using a Tails device when you translate.

Each [[language team|translate#language-teams]] keeps track of their contributors' repositories.

## gettext

The translation system used to translate Tails is called <span
class="application">[[!wikipedia gettext]]</span>. Every sentence that
needs to be translated is written in a [PO
file](https://www.gnu.org/software/gettext/manual/gettext.html#PO-Files).

When working on the website translation, it is highly recommended that you
[[build the wiki locally|contribute/build/website/]] in order to verify
your modifications or to review the translations of somebody else.

# Resources

- The [[localization tricks page|contribute/l10n_tricks]]
